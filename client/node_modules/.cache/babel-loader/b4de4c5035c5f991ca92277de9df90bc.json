{"ast":null,"code":"var _jsxFileName = \"C:\\\\js-ssd\\\\contact-diary\\\\client\\\\src\\\\components\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport uuid from \"uuid\";\nimport contactContext from \"./ContactContex\";\nimport contactReducer from \"./contactReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"one\",\n      email: \"one@gmail.com\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"two\",\n      email: \"two@gmail.com\",\n      type: \"personal\"\n    }]\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //add contact\n  //delete contact\n  //set current contact\n  //clear current contact\n  //update current contact\n  //filter contact\n  // clear filter\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["C:/js-ssd/contact-diary/client/src/components/context/contact/ContactState.js"],"names":["React","useReducer","uuid","contactContext","contactReducer","ContactState","props","initialState","contacts","id","name","email","type","state","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,KAAK,EAAE,eAHT;AAIEC,MAAAA,IAAI,EAAE;AAJR,KADQ,EAOR;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,KAAK,EAAE,eAHT;AAIEC,MAAAA,IAAI,EAAE;AAJR,KAPQ;AADS,GAArB;AAiBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACG,cAAD,EAAiBG,YAAjB,CAApC,CAlB8B,CAoB9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAEK,KAAK,CAACL;AADX,KADT;AAAA,cAKGF,KAAK,CAACS;AALT;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArCD;;GAAMV,Y;;KAAAA,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport uuid from \"uuid\";\r\nimport contactContext from \"./ContactContex\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"one\",\r\n        email: \"one@gmail.com\",\r\n        type: \"personal\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"two\",\r\n        email: \"two@gmail.com\",\r\n        type: \"personal\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  //add contact\r\n  //delete contact\r\n  //set current contact\r\n  //clear current contact\r\n  //update current contact\r\n  //filter contact\r\n  // clear filter\r\n\r\n  return (\r\n    <contactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </contactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}